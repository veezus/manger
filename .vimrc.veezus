set incsearch                   " incremental search
set laststatus=2                " show a status bar at the bottom of each window
set ruler
set list                        " show tabs as arrows and trailing spaces as dash
set listchars=tab:>\ ,trail:-,extends:>,precedes:<
set showcmd                     " shows partial commands in the lower right
set showmatch                   " blink opening parens when closing
set wildmenu                    " allow tab to cycle through found options
set wildmode=list:longest
set splitbelow                  " open newly split file on the bottom
set splitright                  " open newly split file on the right
set autoread                    " load files that have been updated on disk
set scrolloff=5                 " screen scrolls at 5 lines from top or bottom
set hlsearch                    " highlight search terms
hi Visual term=reverse cterm=reverse
set backspace=indent,eol,start  " allow removing indents and line breaks
set visualbell
set nu
set t_Co=256
colors ir_black

augroup spacesovertabs
  autocmd FileType c,javascript,html,ruby,sass,text,vim
        \ setlocal autoindent shiftwidth=2 softtabstop=2 expandtab tabstop=2
augroup END

" Bundle Open command, from Bernerd Schaefer
" Call with :BundleOpen <gemname>
function! s:BundleOpen(Gem) abort
  if exists(':Btabedit')
    execute 'Btabedit '.a:Gem
    redraw
    let v:warningmsg = 'Use :Btabedit instead. It has tab complete!'
    echomsg v:warningmsg
    return
  endif
  let path = system('bundle show '.a:Gem)
  if v:shell_error != 0
    echo 'failed to run command'
  else
    exe 'tabedit '.substitute(path, '\v\C\n$', '', '') | :lcd %
  endif
endfunction
:command! -nargs=1 BundleOpen :call s:BundleOpen(<q-args>)

noremap           <F1>   <Esc>
noremap!          <F1>   <Esc>

" copy selected line
vmap <Leader>c :w !pbcopy<CR>
" grep for word under cursor
nnoremap <Leader>f :grep <cword> -r app lib config features spec vendor<CR><CR><CR>

" timestamps for daily log
nmap <Leader>tg o<Esc>"=strftime("%H:%M")<CR>pa -  
nmap <Leader>te 0f-l"=strftime("%H:%M")<CR>p
nmap <Leader>tu yypv$r=o<Esc>k
nmap <Leader>td O<Esc>"=strftime("%a, %b %d, %Y")<CR>p<Leader>tu<Leader>tg
" For timeless date starting
" nmap <Leader>td O<Esc>"=strftime("%a, %b %d, %Y")<CR>p<Leader>tu<CR>O<Esc>i
nmap <Leader>tt O<Esc>"=strftime("%a, %b %d, %Y", localtime()+86400)<CR>p<Leader>tu<CR>O<Esc>i

source ~/.vimrc.local
