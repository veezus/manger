#!/usr/bin/env zsh

source_dir=`pwd`
dotfiles=(.zshrc .zshrc.veezus .ctags .gemrc .gitattributes .gitconfig .gitignore .irbrc)
dotfiles+=(.phoenix.js .railsrc .ssh/config .tmux.conf .tmux-osx.conf .vimrc .vimrc.local)
dotfiles+=(.vimrc.veezus)
executables=(bin/manger bin/untilfail)

function _link {
  for file in $dotfiles; do
    if [ -e $HOME/$file ]; then
      echo "Skipping existing $file"
    else
      echo "Adding symlink for $file"
      `ln -s $source_dir/$file $HOME/$file`
    fi
  done

  if [ ! -e $HOME/bin ]; then
    `mkdir $HOME/bin`
  fi

  for file in $executables; do
    if [ -e $HOME/$file ]; then
      echo "Skipping existing $file"
    else
      echo "Adding symlink for $file"
      `ln -s $source_dir/$file $HOME/$file`
    fi
  done
}

function _unlink {
  for file in $dotfiles; do
    if [ -e $HOME/$file ]; then
      if [ -L $HOME/$file ]; then
        echo "Removing symlinked $HOME/$file"
        `rm $HOME/$file`
      else
        echo "Skipping non-symlink $HOME/$file"
      fi
    else
      echo "Ignoring non-existent $HOME/$file"
    fi
  done

  for file in $executables; do
    if [ -e $HOME/$file ]; then
      if [ -L $HOME/$file ]; then
        echo "Removing symlinked $HOME/$file"
        `rm $HOME/$file`
      else
        echo "Skipping non-symlink $HOME/$file"
      fi
    else
      echo "Ignoring non-existent $HOME/$file"
    fi
  done
}

function _install_bundle {
  echo "Fetching $2"
  if [ -e $2 ]; then
    (
      cd $2
      git pull
    )
  else
    git clone https://github.com/$1/$2.git
  fi
}

function _vim_bundle {
  mkdir -p ~/.vim/bundle
  cd ~/.vim/bundle

  # Vim customization
  _install_bundle itchyny lightline.vim
  # _install_bundle vim-airline vim-airline
  # _install_bundle vim-airline vim-airline-themes
  _install_bundle twerth ir_black
  _install_bundle mileszs ack.vim

  # General code
  _install_bundle tpope vim-commentary
  _install_bundle tpope vim-projectionist
  _install_bundle AndrewRadev splitjoin.vim
  _install_bundle tpope vim-fugitive
  _install_bundle tpope vim-endwise
  _install_bundle tpope vim-surround
  _install_bundle tpope vim-unimpaired
  _install_bundle junegunn fzf
  _install_bundle junegunn fzf.vim

  # Languages / frameworks
  _install_bundle vim-ruby vim-ruby
  _install_bundle elixir-editors vim-elixir
  _install_bundle pangloss vim-javascript
  _install_bundle leafgarland typescript-vim
  _install_bundle tpope vim-rails
  _install_bundle posva vim-vue
  _install_bundle slim-template vim-slim
  _install_bundle vimwiki vimwiki

  # Project management
  _install_bundle adamlowe vim-slurper
}
function _vim_rebundle {
  rm -rf ~/.vim/bundle
  _vim_bundle
}

case $1 in
  link)
    _link
    ;;
  unlink)
    _unlink
    ;;
  vimbundle)
    _vim_bundle
    ;;
  vimrebundle)
    _vim_rebundle
    ;;
  *)
    echo "Would you like to link or unlink the following manger dotfiles and executable?"
    echo $dotfiles
    echo $executables
    echo "You may also install vim dependencies with vimbundle or vimrebundle"
    ;;
esac
