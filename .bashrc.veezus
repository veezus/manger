export EDITOR=vim

# a sane default prompt
[ -z "$PS1" ] || export PS1="\[\033[01;32m\]\u\[\033[00m\]:\[\033[01;36m\]\w\[\033[00m\]\$(git_prompt_info '(%s)')$ "

alias g="git"
alias gitx="gitx --all"
alias invoice="rvm use 1.9.2-p180@captainslog --create && captainslog 15"
alias log="cd; vi Documents/daily_log.txt"
alias ll="ls -l"
alias rake="time rake"
alias testify="watchr ~/.watchr.rb"
alias vi="vim"

# meta-p and meta-n - starts with history searching
bind '"\ep": history-search-backward'
bind '"\en": history-search-forward'

# inspired by dotmatrix's hcd http://github.com/hashrocket/dotmatrix
# go command for code directory
[ -e "$GO_DIR" ] || GO_DIR="$HOME/code"
export GO_DIR

go() {
  cd "$GO_DIR/$1"
}

_go()
{
  local cur projects

  [ -r "$GO_DIR" ] || return 0

  eval 'COMPREPLY=()'
  cur=${COMP_WORDS[COMP_CWORD]}
  projects=$(\ls "$GO_DIR")

  if [ $COMP_CWORD -eq 1 ]; then
    eval 'COMPREPLY=( $(compgen -o filenames -W "$projects" $cur) )'
  fi

  return 0
}
complete -F _go go

# lifted from dotmatrix http://github.com/hashrocket/dotmatrix
git_prompt_info () {
  local g="$(git rev-parse --git-dir 2>/dev/null)"
  if [ -n "$g" ]; then
    local r
    local b
    local d
    local s
    # Rebasing
    if [ -d "$g/rebase-apply" ] ; then
      if test -f "$g/rebase-apply/rebasing" ; then
        r="|REBASE"
      fi
      b="$(git symbolic-ref HEAD 2>/dev/null)"
    # Interactive rebase
    elif [ -f "$g/rebase-merge/interactive" ] ; then
      r="|REBASE-i"
      b="$(cat "$g/rebase-merge/head-name")"
    # Merging
    elif [ -f "$g/MERGE_HEAD" ] ; then
      r="|MERGING"
      b="$(git symbolic-ref HEAD 2>/dev/null)"
    else
      if [ -f "$g/BISECT_LOG" ] ; then
        r="|BISECTING"
      fi
      if ! b="$(git symbolic-ref HEAD 2>/dev/null)" ; then
        if ! b="$(git describe --exact-match HEAD 2>/dev/null)" ; then
          b="$(cut -c1-7 "$g/HEAD")..."
        fi
      fi
    fi

    # Dirty Branch
    local newfile='?? '
    if [ -n "$ZSH_VERSION" ]; then
      newfile='\?\? '
    fi
    d=''
    s=$(git status --porcelain 2> /dev/null)
    [[ $s =~ "$newfile" ]] && d+='+'
    [[ $s =~ "M " ]] && d+='*'
    [[ $s =~ "D " ]] && d+='-'

    if [ -n "${1-}" ]; then
      printf "$1" "${b##refs/heads/}$r$d"
    else
      printf "(%s) " "${b##refs/heads/}$r$d"
    fi
  fi
}

# Load RVM
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

# Load machine settings if available
[ -e "$HOME/.bashrc.local" ] && . "$HOME/.bashrc.local"
